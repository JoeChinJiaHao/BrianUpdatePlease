{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Todo } from '../Todo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/radio\";\nimport * as i8 from \"@angular/material/datepicker\";\n\nfunction IdkComponent_mat_hint_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Char Count: \", _r0.value == null ? null : _r0.value.length, \"/20\");\n  }\n}\n\nfunction IdkComponent_mat_hint_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Char Count: \", _r0.value == null ? null : _r0.value.length, \"/20 *exceeded 20 char!\");\n  }\n}\n\nfunction IdkComponent_mat_radio_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const p_r6 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", p_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(p_r6);\n  }\n}\n\nfunction IdkComponent_mat_hint_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 17);\n    i0.ɵɵtext(1, \"*Select a priority\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let IdkComponent = /*#__PURE__*/(() => {\n  class IdkComponent {\n    constructor(fb, dialogref, data) {\n      this.fb = fb;\n      this.dialogref = dialogref;\n      this.data = data;\n      this.description = \"\";\n      this.taskFormControl = new FormControl('', [Validators.required, Validators.maxLength(50)]);\n      this.priorityFormControl = new FormControl('', [Validators.required]);\n      this.dueDateFormControl = new FormControl('', [Validators.required]);\n      this.tomorrow = new Date();\n      this.priorities = [\"low\", \"medium\", \"high\"];\n      this.form = new FormGroup({});\n      this.description = data.description; //can be used to pass data if i can solve the injection issue\n    }\n\n    ngOnInit() {\n      this.form = this.fb.group({\n        task: this.taskFormControl,\n        priority: this.priorityFormControl,\n        dueDate: this.dueDateFormControl\n      });\n    }\n\n    close() {\n      this.dialogref.close();\n    }\n\n    save() {\n      //use save data protocol here from original app\n      let taskId = uuidv4();\n      let singleTodo = new Todo(this.form.value.task, this.form.value.priority, this.form.value.dueDate, taskId);\n      this.dialogref.close(singleTodo);\n    }\n\n  }\n\n  IdkComponent.ɵfac = function IdkComponent_Factory(t) {\n    return new (t || IdkComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  IdkComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IdkComponent,\n    selectors: [[\"app-idk\"]],\n    decls: 31,\n    vars: 9,\n    consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"task\", \"autocomplete\", \"off\"], [\"task\", \"\"], [4, \"ngIf\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"center\"], [\"fxLayoutAlign\", \"center\", \"fxLayout\", \"row\", \"fxLayoutGap\", \"2vw\", \"aria-label\", \"Select an option\", \"formControlName\", \"priority\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayoutAlign\", \"center\", \"style\", \"color:red\", 4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"dueDate\", \"readonly\", \"readonly\", 3, \"matDatepicker\", \"min\", \"click\"], [\"id\", \"picker\", \"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matDialogClose\", \"\", 1, \"mat-raised-button\"], [1, \"mat-raised-button\", 3, \"disabled\", \"click\"], [2, \"color\", \"red\"], [3, \"value\"], [\"fxLayoutAlign\", \"center\", 2, \"color\", \"red\"]],\n    template: function IdkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Add a task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1);\n        i0.ɵɵelementStart(3, \"mat-form-field\");\n        i0.ɵɵelement(4, \"input\", 2, 3);\n        i0.ɵɵelementStart(6, \"mat-placeholder\");\n        i0.ɵɵtext(7, \"Enter your task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, IdkComponent_mat_hint_8_Template, 2, 1, \"mat-hint\", 4);\n        i0.ɵɵtemplate(9, IdkComponent_mat_hint_9_Template, 2, 1, \"mat-hint\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"div\");\n        i0.ɵɵelementStart(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-radio-group\", 7);\n        i0.ɵɵtemplate(15, IdkComponent_mat_radio_button_15_Template, 2, 2, \"mat-radio-button\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, IdkComponent_mat_hint_16_Template, 2, 0, \"mat-hint\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\");\n        i0.ɵɵelementStart(18, \"input\", 10);\n        i0.ɵɵlistener(\"click\", function IdkComponent_Template_input_click_18_listener() {\n          i0.ɵɵrestoreView(_r7);\n\n          const _r5 = i0.ɵɵreference(25);\n\n          return _r5.open();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-placeholder\");\n        i0.ɵɵtext(20, \"Select your due date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-hint\");\n        i0.ɵɵtext(22, \"Select using calendar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-datepicker-toggle\", 11);\n        i0.ɵɵelement(24, \"mat-datepicker\", null, 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-dialog-actions\");\n        i0.ɵɵelementStart(27, \"button\", 13);\n        i0.ɵɵtext(28, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function IdkComponent_Template_button_click_29_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(30, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n\n        const _r5 = i0.ɵɵreference(25);\n\n        let tmp_4_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (_r0.value == null ? null : _r0.value.length) <= 20);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (_r0.value == null ? null : _r0.value.length) > 20);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.priorities);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.form.get(\"priority\")) == null ? null : tmp_4_0.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matDatepicker\", _r5)(\"min\", ctx.tomorrow);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"for\", _r5);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    directives: [i2.MatDialogTitle, i2.MatDialogContent, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.MatFormField, i4.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.MatPlaceholder, i5.NgIf, i3.MatHint, i6.DefaultLayoutAlignDirective, i7.MatRadioGroup, i6.DefaultLayoutDirective, i6.DefaultLayoutGapDirective, i5.NgForOf, i7.MatRadioButton, i8.MatDatepickerInput, i8.MatDatepickerToggle, i3.MatSuffix, i8.MatDatepicker, i2.MatDialogActions, i2.MatDialogClose],\n    styles: [\"\"]\n  });\n  return IdkComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}